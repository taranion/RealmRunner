name: Compile Linux Self
on: [push]
#on:
#  push:
#    # Sequence of patterns matched against refs/tags
#    tags:
#    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
env:
  LANG: "en_EN.UTF-8"
  CENTRAL_SNAPSHOTS_TOKEN: ${{ secrets.CENTRAL_SNAPSHOTS_TOKEN }}
  OSSRH_USER_TOKEN: ${{ secrets.OSSRH_USER_TOKEN }}
  OSSRH_PWD_TOKEN: ${{ secrets.OSSRH_PWD_TOKEN }}
  DEPLOYMENT_ID: b54e1b31-6b17-4fab-9d30-c7c1d10e79a3
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  CC: gcc-11
  CXX: g++-11

jobs:
  compile:
    runs-on: ubuntu-latest
    steps:
    - name: checkout sources
      uses: actions/checkout@v4

    - name: setup-graalvm-ce
      uses: gluonhq/setup-graalvm@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
         # GraalVM version. Default: latest
         graalvm: 'latest'
         # Java version. Since GraalVM 22, either java11, java17 or java23. Before GraalVM 22, empty. Default: java23
         jdk: 'java23'
         # Architecture flag. Available options are 'x86_64' (default) and 'aarch64'. The latter is available for M1 runners starting GraalVM 22.1.
         arch: 'x86_64'

    - name: Set Release version env variable
      run: |
        echo "RELEASE_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV

    - name: Compile dependencies
      run: mvn -U -B -s settings.xml clean install -Dgpg.skip

    - name: Compile CLI JRE
      run: cd RealmRunner_CLI ; mvn -B -s ../settings.xml clean package gluonfx:build; ls target

    - name: Fat jar artifact
      run: mkdir artifacts ; ls RealmRunner_CLI/target/ ; cp RealmRunner_CLI/target/realmrunner_cli-*with-dependencies.jar artifacts/realmrunner-cli-${{ env.RELEASE_VERSION }}.jar ; ls artifacts/
    - uses: actions/upload-artifact@v4
      with:
        name: realmrunner-cli-${{ env.RELEASE_VERSION }}
        path: artifacts/realmrunner-cli-${{ env.RELEASE_VERSION }}.jar
        